@using OrchardCore.ContentManagement.Display
@using OrchardCore.DisplayManagement.ModelBinding
@inject IContentItemDisplayManager _contentItemDisplayManager
@inject IUpdateModelAccessor _modelUpdaterAccessor
@{
    var updater = _modelUpdaterAccessor.ModelUpdater;
}

<h1>Advanced Form Submissions</h1>
<style asp-src="/AdvancedForms/Styles/AdvancedForms.css"></style>
<div id='dashboard'>
</div>
<script asp-src="/AdvancedForms/Scripts/d3.v3.min.js" at="Head" asp-name="advancedforms.d3.v3.min.js"></script>
<script asp-src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" at="Head"></script>
<script asp-src="/AdvancedForms/Scripts/urlConfig.js" at="Head" asp-name="advancedforms.urlConfig"></script>
<script at="Head">
    if (typeof urlConfig !== undefined) {
        urlConfig.Entry = '@Url.Action("Entry", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.Upload = '@Url.Action("Upload", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.MoveMedia = '@Url.Action("MoveMedia", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.GetPublicComments = '@Url.Action("GetPublicComments", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.GetAdminComments = '@Url.Action("GetAdminComments", "Admin", new { area = "AdvancedForms" })';
        urlConfig.GetGraphData = '@Url.Action("GetGraphData", "Admin", new { area = "AdvancedForms" })';
        urlConfig.MakePublicComment = '@Url.Action("MakePublicComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdateAdminComment = '@Url.Action("SaveAdminComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdatePublicComment = '@Url.Action("SavePublicComment", "AdvancedForms", new { area = "AdvancedForms" })';
    }
</script>
<script asp-src="/AdvancedForms/Scripts/D3.js" at="Head" asp-name="advancedforms.D3"></script>
<script>
    renderGraph();
</script>
<hr />

<fieldset class="filter-options">
    <div class="card mb-3">
        <div class="card-body bg-light p-3">
            <div class="row">
                <div class="form-group col-xl-3 mb-xl-n1">
                    @using (Html.BeginForm(null, null, FormMethod.Get, new { name = "submissionForm", id = "submissionForm" }))
                    {
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-secondary text-light">Title</span>
                            </div>
                            <input class="form-control" type="text" id="DisplayText" name="DisplayText" value="@Model.DisplayText">
                        </div>
                    }
                </div>
                @if (Model.ContentItemSummaries.Count > 0)
                {
                    <div class="form-group col-xl-9 mb-n1" style="padding: 0px 20px;">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "exportForm", id = "exportForm" }))
                        {
                            <div class="input-group input-group-sm">
                                <button id="btnExport" class="btn btn-primary" style="float:right;display:none;right: 0px !important;position: absolute;padding: 2px 10px;" value="" name="submit.Export">@T["Export"]</button>
                                <input type="hidden" id="checkedItems" name="checkedItems" />
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</fieldset>

@if (Model.ContentItemSummaries.Count > 0)
{
    <ul class="list-group">
        @foreach (var contentItemSummary in Model.ContentItemSummaries)
        {
            @await DisplayAsync(await _contentItemDisplayManager.BuildDisplayAsync(contentItemSummary, updater, "SubmissionAdmin_ListItem"))
        }
    </ul>
}
else
{
    <div class="alert alert-info">
        @T["No result found."]
    </div>
}
@await DisplayAsync(Model.Pager)

<script type="text/javascript" at="Foot">
    var checkedItems = [];
    var filtered = '@Model.DisplayText';
    function itemChecked(id) {
        $("#btnExport").hide();
        if (checkedItems.includes(id)) {
            var index = checkedItems.indexOf(id);
            if (index !== -1) {
                checkedItems.splice(index, 1);
            }
        } else {
            checkedItems.push(id);
        }
        if (checkedItems.length > 0) {
            $("#btnExport").show();
        }
        $("#checkedItems").val(checkedItems.join())
    }
    $("#DisplayText").blur(function () {
        if (filtered !== this.value) {
            $("#btnExport").val("");
            $("#filterTitle").val("submit.Filter");
            $("#submissionForm").submit();
        }
    });

    $('#DisplayText').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            event.preventDefault();
            $("#btnExport").val("");
            $("#filterTitle").val("submit.Filter");
            $("#submissionForm").submit();
        }
    });

    $("#btnExport").click(function () {
        $("#btnExport").val("submit.Export");
        $("#filterTitle").val("");
        $("#exportForm").submit();
    });

</script>
@model AdvancedForms.ViewModels.AdvancedFormViewModel
@using Common.ViewModels;

<script asp-src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" at="Head"></script>
<style asp-src="/AdvancedForms/Styles/formio.full.min.css"></style>
<style asp-src="/AdvancedForms/Styles/display.css"></style>
<script asp-src="/AdvancedForms/Scripts/formio.full.min.js" at="Head" asp-name="formio.full.min"></script>
<script asp-src="/AdvancedForms/Scripts/urlConfig.js" at="Head" asp-name="advancedforms.urlConfig"></script>
<script at="Head">
    if (typeof urlConfig !== undefined) {
        urlConfig.Entry = '@Url.Action("Entry", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.AddCaseAttachItem = '@Url.Action("AddCaseAttachItem", "Admin", new { area = "Case" })';
        urlConfig.Upload = '@Url.Action("Upload", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.MoveMedia = '@Url.Action("MoveMedia", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.GetPublicComments = '@Url.Action("GetPublicComments", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.GetAdminComments = '@Url.Action("GetAdminComments", "Admin", new { area = "AdvancedForms" })';
        urlConfig.GetGraphData = '@Url.Action("GetGraphData", "Admin", new { area = "AdvancedForms" })';
        urlConfig.MakePublicComment = '@Url.Action("MakePublicComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdateAdminComment = '@Url.Action("SaveAdminComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdatePublicComment = '@Url.Action("SavePublicComment", "AdvancedForms", new { area = "AdvancedForms" })';
    }
</script>
<script asp-src="/AdvancedForms/Scripts/Display.js" at="Head" asp-name="display"></script>

<style name="trumbowyg" asp-src="/OrchardCore.Resources/Styles/trumbowyg.min.css"
       debug-src="/OrchardCore.Resources/Styles/trumbowyg.css"></style>
<script asp-src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" at="Head"></script>
<script name="trumbowyg" depends-on="admin" asp-src="/OrchardCore.Resources/Scripts/trumbowyg.min.js"
        debug-src="/OrchardCore.Resources/Scripts/trumbowyg.js" at="Head"></script>

@{
    var isEdit = !String.IsNullOrEmpty(Model.Id);
    var createOrEdit = isEdit ? "Edit" : "Create";
}

<script type='text/javascript' at="Foot">
    window.onload = function() {
        Formio.createForm(document.getElementById('formio'),
            @Html.Raw(Model.Container)
            @if (Model.EntryType == AdvancedForms.Enums.EntryType.View)
            {
                string readOnly = ",{readOnly: true}";
                @Html.Raw(readOnly);
            }
        ).then(function(form) {
            form.submission = {
                @if (!String.IsNullOrEmpty(Model.SubmissionId))
                {
                    string submission = "data:" + Html.Raw(Model.Submission);
                    @Html.Raw(submission);
                }
            };
            form.on('submit', function (submission) { saveForm(submission, false); });
            form.on('change', function (submission) {
                DraftSubmission = submission;
            });
        });
        initValue('@Model.Title','@Model.Id','@Model.Header','@Model.Footer','@Model.Description','@Model.Type','@Model.SubmissionId','@Model.Instructions','@Model.Owner', '@Model.CaseID', '@Model.HideFromListing')
    };
    setCurrentUser('@Model.Id', '@User.Identity.Name', false);
</script>

<form enctype="multipart/form-data" asp-action="@createOrEdit" method="post" id="main"></form>
<a style="float:right;" href="~/profile">@T["Go To Profile"]</a>

<div>
    <h1 style="font-weight: 600;font-size: 30px;">
        @Model.Title
        @if (Model.EntryType == AdvancedForms.Enums.EntryType.View || Model.EntryType == AdvancedForms.Enums.EntryType.Edit)
        {
            <a class="fa fa-print print-btn" style="font-size:27px;text-decoration:none !important;" onclick="printButton();" href="#"></a>
        }
    </h1>
</div>
<div>
    @if (!string.IsNullOrEmpty(Model.StatusText))
    {

        @Html.LabelFor(model => model.Status)
        <span>:</span>
        <b>@Model.StatusText</b>
        <br />
        <br />
    }
</div>


@if (!string.IsNullOrEmpty(Model.Description))
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#Description" onclick="collapseShow('Description')" style="color:#fff;text-decoration:none;">@T["Description"] <i class="fa fa-minus pull-right"></i></a>
                </h4>
            </div>
            <div id="Description" class="panel-collapse collapse show">
                <div class="panel-body">
                    @Html.Raw(Model.Description)
                </div>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.Instructions))
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#Instructions" onclick="collapseShow('Instructions')" style="color:#fff;text-decoration:none;">
                        @T["Instructions"]
                        <i class="fa fa-plus pull-right"></i>
                    </a>
                </h4>
            </div>
            <div id="Instructions" class="panel-collapse collapse">
                <div class="panel-body">
                    @Html.Raw(Model.Instructions)
                </div>
            </div>
        </div>
    </div>
}


<div id="advancedForm-errors"></div>

<div id='formio'></div>

@if (string.IsNullOrWhiteSpace(Model.StatusText) || Model.StatusText.Equals("Draft"))
{
    <button form="main" name="submit.Save" class="primaryAction btn btn-info" onclick="saveDraft()" value="submit.Save">@T["Save as Draft"]</button>
}
<input type="hidden" asp-for="Container" form="main" />
<input type="hidden" asp-for="Id" form="main" />

@if (!string.IsNullOrWhiteSpace(Model.SubmissionId) && !Model.StatusText.Equals("Draft"))
{
    <h4>@T["Comments"]</h4><hr />
    <div>
        <br />
        <div id="PublicCommentsPanels">
        </div>
        <br />
        <div>
            @await Component.InvokeAsync("CommentField", new CommentFieldViewModel()
            {
                AttachFileHint = T["Attach a file with comment"], AttachmentID = "publicAttachment", AttachRemoveHint = T["Remove Attachment"], AttachRemoveID = "publicAttachmentRemove",
                Editor = Model.PublicEditor, ErrorHint = T["Public comment required."], ErrorMessageClass = "errorMessagePublic", FileUploadID = "fileuploadPublic"
            });
            <button class="publish-button btn btn-success" onclick="submitPublicComment('@Model.SubmissionId')">@T["Save"]</button>
        </div>
        <br />
        <br />
        <hr />
    </div>
}

<div class="loading">@T["Loading"]&#8230;</div>
<script asp-src="/OrchardCore.Resources/Scripts/jquery-ui.js" debug-src="/OrchardCore.Resources/Scripts/jquery-ui.js" asp-name="jquery-ui" at="Foot"></script>
<script asp-src="https://vuejs.org/js/vue.min.js" debug-src="https://vuejs.org/js/vue.js" asp-name="vuejs" at="Foot"></script>
<script asp-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.min.js" debug-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.js" asp-name="sortable" at="Foot"></script>
<script asp-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.min.js" debug-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.js" asp-name="vuedraggable" depends-on="vuejs, sortable" at="Foot"></script>
<script asp-src="/AdvancedForms/Scripts/jquery.fileupload.js" at="Foot" asp-name="advancedforms.fileupload"></script>
<script asp-src="/AdvancedForms/Scripts/urlConfig.js" at="Foot" asp-name="advancedforms.urlConfig"></script>
<script at="Foot">
    if (typeof urlConfig !== undefined) {
        urlConfig.Entry = '@Url.Action("Entry", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.Upload = '@Url.Action("Upload", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.MoveMedia = '@Url.Action("MoveMedia", "Admin", new { area = "OrchardCore.Media" })';
        urlConfig.GetPublicComments = '@Url.Action("GetPublicComments", "AdvancedForms", new { area = "AdvancedForms" })';
        urlConfig.GetAdminComments = '@Url.Action("GetAdminComments", "Admin", new { area = "AdvancedForms" })';
        urlConfig.GetGraphData = '@Url.Action("GetGraphData", "Admin", new { area = "AdvancedForms" })';
        urlConfig.MakePublicComment = '@Url.Action("MakePublicComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdateAdminComment = '@Url.Action("SaveAdminComment", "Admin", new { area = "AdvancedForms" })';
        urlConfig.SaveUpdatePublicComment = '@Url.Action("SavePublicComment", "AdvancedForms", new { area = "AdvancedForms" })';
    }
</script>
<script asp-src="/AdvancedForms/Scripts/Submission.js" at="Foot"></script>
<script type="text/javascript" at="Foot">
    GetPublicComments('@Model.SubmissionId');
</script>

<script>
    $(document).ready(function () {
        // Add minus icon for collapse element which is open by default
        $(".collapse.in").each(function () {
            $(this).siblings(".panel-heading").find(".fa").addClass("fa-minus").removeClass("fa-plus");
        });

        // Toggle plus minus icon on show hide of collapse element
        $(".collapse").on('show.bs.collapse', function () {
            $(this).parent().find(".fa").removeClass("fa-plus").addClass("fa-minus");
        }).on('hide.bs.collapse', function () {
            $(this).parent().find(".fa").removeClass("fa-minus").addClass("fa-plus");
        });
    });
    function collapseShow(id) {
        $("#Description").collapse('toggle');
        $("#Instructions").collapse('toggle');
    }
</script>
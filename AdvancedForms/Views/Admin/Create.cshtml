@model AdvancedForms.ViewModels.AdvancedFormViewModel
@using System.Web
@* Css Files  *@
<style asp-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
       debug-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"></style>
<style asp-src="/AdvancedForms/Styles/formio.full.min.css"></style>
<style asp-src="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" 
       debug-src="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"></style>
<style name="trumbowyg" asp-src="/OrchardCore.Resources/Styles/trumbowyg.min.css" 
       debug-src="/OrchardCore.Resources/Styles/trumbowyg.css"></style>
<style asp-src="/AdvancedForms/Styles/AdvancedForms.css"></style>
@* JS Files  *@
<script asp-src="/AdvancedForms/Scripts/formio.full.min.js" at="Head" asp-name="formio.full.min"></script>
<script asp-src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" at="Head"></script>
<script asp-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" at="Head"></script>
<script name="trumbowyg" depends-on="admin" asp-src="/OrchardCore.Resources/Scripts/trumbowyg.min.js" 
        debug-src="/OrchardCore.Resources/Scripts/trumbowyg.js" at="Foot"></script>
<script asp-src="/AdvancedForms/Scripts/AdvancedForms.js" at="Head" asp-name="AdvancedForms"></script>


@{
    var standardComp = "{components:this.formioComponents}";
    var isEdit = !String.IsNullOrEmpty(Model.Id);
    var createOrEdit = isEdit ? "Edit" : "Create";
}

<script type='text/javascript' at="Head">
    window.onload = function () {
        let formioComponents;
        Formio.builder(document.getElementById('builder'),
        @if (String.IsNullOrEmpty(Model.Container)){@standardComp}
         else{@Html.Raw(Model.Container)}
         ).then(builderChange);
    };
</script>

<h1>@T["Advanced Form Module"]</h1>
@{
    var errors = ViewData.ModelState.Where(n => n.Value.Errors.Count > 0).ToList();
    if (errors.Count > 0)
    {
        <div class="validation-summary-errors" data-valmsg-summary="true">
            <ul>
                @foreach (var item in errors)
                {
                    <li><span class="field-validation-error">@item.Value.Errors[0].ErrorMessage.ToString()</span></li>
                }
            </ul>
        </div>
    }
}
<div class="validation-summary-errors" data-valmsg-summary="true" id="notifyError">
    <ul>
        <li id="TitleError"><span class="field-validation-error">@T["The Title field is Required."]</span></li>
        <li id="TagError"><span class="field-validation-error">@T["The Tag field is Required."]</span></li>
        <li id="DescriptionError"><span class="field-validation-error">@T["The Description field is required."]</span></li>
        <li id="ContainerError"><span class="field-validation-error">@T["Form components is Required."]</span></li>
    </ul>
</div>

<form enctype="multipart/form-data" asp-action="@createOrEdit" method="post" id="main" onsubmit="return onFormSubmit(this)"></form>

<div>
    <label asp-for="Title">@T["Title"]</label>
    <input asp-for="Title" class="form-control content-preview-text content-caption-text" autofocus="autofocus" form="main" />
    <span class="hint">@T["The title of the form."]</span>
    <br />
    <br />
</div>

<div>
    <label asp-for="Tag">@T["Tag"]</label>
    <input asp-for="Tag" class="form-control content-preview-text content-caption-text" autofocus="autofocus" form="main" />
    <span class="hint">@T["The tag of the form."]</span>
    <br />
    <br />
</div>

<div class="description">
    <label asp-for="Description">@T["Description"]</label>
    <textarea asp-for="Description" class="form-control content-preview-text content-caption-text" form="main"></textarea>
    <span class="hint">@T["The Description of the form."]</span>
    <br />
    <br />
</div>

<div>
    <label asp-for="Instructions">@T["Instructions"]</label>
    <textarea asp-for="Instructions" class="form-control content-preview-text content-caption-text" form="main"></textarea>
    <span class="hint">@T["The instructions for the form."]</span>
    <br />
    <br />
</div>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#formBuilder">@T["Form Builder"]</a></li>
    <li><a data-toggle="tab" href="#formPreview">@T["Preview"]</a></li>
    <li><a data-toggle="tab" href="#formJsonTab">@T["Form JSON"]</a></li>
    <li><a data-toggle="tab" href="#subJsonTab">@T["Subumssion JSON"]</a></li>
    <li><a data-toggle="tab" href="#printTab">@T["Print"]</a></li>
</ul>

<div class="tab-content">
    <div id="formBuilder" class="tab-pane fade in active">
        <br />
        <div id='builder'></div>
    </div>
    <div id="formPreview" class="tab-pane fade">
        <br />
        <div id='formio'></div>
    </div>
    <div id="formJsonTab" class="tab-pane fade">
        <br />
        <div class="card card-body bg-light jsonviewer">
            <pre id="formJson"></pre>
        </div>
    </div>
    <div id="subJsonTab" class="tab-pane fade">
        <br />
        <div class="card card-body bg-light jsonviewer">
            <pre id="subJson"></pre>
        </div>
    </div>
    <div id="printTab" class="tab-pane fade">
        <br />
        <div>
            <label asp-for="Header">@T["Header"]</label>
            <textarea asp-for="Header" class="form-control content-preview-text content-caption-text" form="main"></textarea>
            <span class="hint">@T["The Header for the form."]</span>
            <br />
            <br />
        </div>
        <div>
            <label asp-for="Footer">@T["Footer"]</label>
            <textarea asp-for="Footer" class="form-control content-preview-text content-caption-text" form="main"></textarea>
            <span class="hint">@T["The Footer for the form."]</span>
            <br />
            <br />
        </div>
    </div>
</div>
<input type="hidden" asp-for="Container" form="main" />

<br />
<br />

<button form="main" type="submit" name="submit.Publish" class="publish-button btn btn-success" value="submit.Publish">@T["Publish"]</button>
<button form="main" type="submit" name="submit.Save" class="primaryAction btn btn-primary" value="submit.Save">@T["Save Draft"]</button>

@{
    var returnUrl = Context.Request.Query["returnUrl"];
    @if (isEdit && !String.IsNullOrWhiteSpace(returnUrl) && Url.IsLocalUrl(returnUrl))
    {
        <a id="button-cancel" href="@returnUrl" class="btn btn-secondary">@T["Cancel"]</a>
    }
}
<input type="hidden" asp-for="Id" form="main" />
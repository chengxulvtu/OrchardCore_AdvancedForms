@using OrchardCore.ContentManagement
@inject IContentManager ContentManager
@model ProfileIndexViewModel

<style>
    #mainNav {
        background-color: #212529 !important;
        padding-top: 0px;
        padding-bottom: 0px;
    }

    #main form {
        margin-top: 0px !important;
    }

    .profileRow {
        margin-top: 85px;
    }

    .menu {
        padding: 0px;
    }

        .menu li {
            padding: 0px;
            text-align: center;
        }

            .menu li a {
                color: #000;
                text-decoration: none;
                display: block;
                padding: 10px;
            }

        .menu .active a {
            color: #fff;
        }

    a {
        color: #007bff;
    }

        a:hover {
            color: #003f84;
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    button:hover {
        background-color: #003f84;
        border-color: #003f84;
    }

    .status {
        font-size: 14px;
        color: #ffc600;
    }
</style>


<div class="row profileRow">
    <div class="col-md-6">
        <h4>@RenderTitleSegments(T["Profile"])</h4>
    </div>
    <div class="col-md-6">
        <form asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="LogOff" method="post" class="form-inline" style="float:right;    margin-top: 5px;">
            <button type="submit" class="btn btn-link nav-link" role="button" style="padding: 0px;"><i class="fa fa-sign-out" aria-hidden="true"></i> @T["Log off"]</button>
        </form>
        <label style="float:right;">@T["Logged In User"] - <strong>@User.Identity.Name</strong></label>
    </div>
    <div class="col-md-12">
        <hr style="margin-bottom: 2rem;margin-top:10px;" />
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="list-group" id="myList">
            @await RenderSectionAsync("ProfileNavigation", required: true)
        </div>
    </div>
    <div class="col-md-9">
        <h2 style="font-size: 20px;">Submitted Forms</h2><hr />

        @if (Model.ContentItemSummaries.Count > 0)
        {
            <ul class="list-group">
                @foreach (var contentItemSummary in Model.ContentItemSummaries)
                {
                    ContentItem contentItem = contentItemSummary;
                    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
                    var hasDraft = contentItem.HasDraft();
                    string action = contentItem.Content.AutoroutePart.Path != null ? contentItem.Content.AutoroutePart.Path.ToString().Split("/")[1] : null;
                    if (action == null)
                    {
                        return;
                    }
                    string status = string.Empty;
                    dynamic selectedContent = await ContentManager.GetAsync(contentItem.Content.AdvancedFormSubmissions.Status.Text.ToString(), VersionOptions.Published);
                    if (selectedContent == null)
                    {
                        selectedContent = await ContentManager.GetAsync(contentItem.Content.AdvancedFormSubmissions.Status.Text.ToString(), VersionOptions.DraftRequired);
                    }
                    if (selectedContent != null)
                    {
                        status = selectedContent.DisplayText;
                    }


                    <li class="list-group-item tedt">
                        <div class="properties">
                            <div class="related float-right">
                                <a href="/AdvancedForms/@action/Edit/@contentItem.ContentItemId?returnUrl=@FullRequestPath" class="btn btn-primary btn-sm">@T["Edit"]</a>
                                @if (hasPublished)
                                {
                                    <a href="/@contentItem.Content.AutoroutePart.Path" class="btn btn-success btn-sm" itemprop="">@T["View"]</a>
                                }
                            </div>
                            <a href="/AdvancedForms/@action/Edit/@contentItem.ContentItemId">@action.Replace("-", " ")</a>
                            <br />
                            <div class="metadata">
                                @if (hasPublished)
                                {
                                    <span class="badge badge-success" title="@T["Published"]">
                                        <i class="fa fa-check" aria-hidden="true"></i> @T["Published"]
                                    </span>
                                }
                                @if (hasDraft)
                                {
                                    <span class="badge badge-primary" title="@T["Draft"]">
                                        <i class="fa fa-pencil" aria-hidden="true"></i> @T["Draft"]
                                    </span>
                                }
                                <span class="badge badge-secondary" title="@T[@status]" style="color:#fff;"> @T["Status - " + @status]</span>
                                <div>
                                    <span class="hint">@T["Last modified {0} by {1}", (object)(await DisplayAsync(await New.TimeSpan(Utc: contentItem.ModifiedUtc))), contentItem.Author]</span>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="alert alert-info">
                @T["No result found."]
            </div>
        }
    </div>
</div>
<hr />